# Maintainer: Yusuke Sasaki <y_sasaki@nuem.nagoya-u.ac.jp>

_realname=gurobi
pkgbase="mingw-w64-${_realname}"
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=6.5.2
pkgrel=1
pkgdesc="MinGW-w64 library for Gurobi (be careful to use)"
arch=('any')
url=""
license=('custom')
makedepends=("${MINGW_PACKAGE_PREFIX}-tools-git")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs")
source=('Makefile')
sha256sums=('SKIP')
_verno=${pkgver//\./}

prepare() {
  # check Gurobi installation
  if [[ ! -d $(cygpath $GUROBI_HOME) ]]; then
    echo "\$GUROBI_HOME is not set."
    return 1
  fi
  verno=$(basename $(realpath `cygpath -u $GUROBI_HOME`/..) | sed 's/gurobi//')
  if ! [[ $verno = ${_verno} ]]; then
    echo "Gurobi version mismatch"
    return 1
  fi 

  cd ${srcdir}

  # copy the dependencies from working directory (be careful).
  cp -r $(cygpath -u $GUROBI_HOME)/src/cpp ${srcdir}/src
  cp $(cygpath -u $GUROBI_HOME)/include/gurobi_{c,c++}.h ${srcdir}/src

  # generate def file.
  gendef $(cygpath $GUROBI_HOME)/bin/gurobi65.dll

  mv Makefile src/
}

build() {
  cd $srcdir
  dlltool --dllname gurobi65.dll --def gurobi65.def --output-lib libgurobi65.dll.a

  cd src/
  make
}

package() {
  mkdir -p ${pkgdir}${MINGW_PREFIX}/{include,lib}

  cp $(cygpath $GUROBI_HOME)/include/gurobi_c.h "${pkgdir}${MINGW_PREFIX}"/include/
  cp $(cygpath $GUROBI_HOME)/include/gurobi_c++.h "${pkgdir}${MINGW_PREFIX}"/include/
  cp $srcdir/libgurobi${_verno/%?/}.dll.a "${pkgdir}${MINGW_PREFIX}"/lib/
  cp $srcdir/libgurobi_c++.a "${pkgdir}${MINGW_PREFIX}"/lib/
}

# vim: set ft=sh ts=2 sw=2 et :
